/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab.pkg6_danielalvarado;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 * Te queremos clau, Te queremos, Te queremos Clau, Te queremos
 *
 *
 * @author dalva
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        arranqueTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_CrearPlaylist = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jt_NombrePlaylist = new javax.swing.JTextField();
        jb_CrearPlaylist = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jt_Nomplay = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        js_Pplay = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        js_Aplaylist = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        jt_Artpla = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jt_AlbumPlay = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jd_EditarCancion = new javax.swing.JDialog();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jt_Enombre = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        js_EditarP = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        js_EditarYear = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        jt_EArtista = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jt_Ealbum = new javax.swing.JTextField();
        jb_GuardarCambios = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        popup_TableCanciones = new javax.swing.JPopupMenu();
        jm_ModificarCancion = new javax.swing.JMenuItem();
        jmt_EliminarCancion = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_Playlist = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jt_NombreCancion = new javax.swing.JTextField();
        js_Puntuacion = new javax.swing.JSpinner();
        js_Year = new javax.swing.JSpinner();
        jt_Artista = new javax.swing.JTextField();
        jt_Album = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_CancionesPlaylist = new javax.swing.JTable();
        jl_Playlist = new javax.swing.JLabel();
        jb_CrearCancion = new javax.swing.JButton();
        cb_Playlists = new javax.swing.JComboBox<>();
        jb_Limpiar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        arbol_Playlist = new javax.swing.JTree();
        jb_MostrarArbol = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jm_GuardarPlaylist = new javax.swing.JMenuItem();
        jm_AbrirPlaylist = new javax.swing.JMenuItem();
        jm_CrearPlaylist = new javax.swing.JMenuItem();

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Crear Playlist");

        jLabel9.setText("Nombre: ");

        jb_CrearPlaylist.setText("Crear Playlist");
        jb_CrearPlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_CrearPlaylistMouseClicked(evt);
            }
        });

        jLabel17.setText("I got a tatoo that said together throug life...");

        jLabel7.setText("Nombre Cancion:");

        jLabel18.setText("Puntuacion:");

        js_Pplay.setModel(new javax.swing.SpinnerNumberModel(5, 1, 10, 1));

        jLabel19.setText("Year:");

        js_Aplaylist.setModel(new javax.swing.SpinnerNumberModel(2010, 1900, 2020, 1));

        jLabel20.setText("Artista:");

        jLabel21.setText("Album:");

        jLabel22.setText("Carved your name with my pocket knife...");

        javax.swing.GroupLayout jd_CrearPlaylistLayout = new javax.swing.GroupLayout(jd_CrearPlaylist.getContentPane());
        jd_CrearPlaylist.getContentPane().setLayout(jd_CrearPlaylistLayout);
        jd_CrearPlaylistLayout.setHorizontalGroup(
            jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                        .addGap(440, 440, 440)
                        .addComponent(jb_CrearPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                        .addGap(457, 457, 457)
                        .addComponent(jLabel8))
                    .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                        .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                                        .addComponent(js_Pplay, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19))
                                    .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                                        .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jt_Artpla)
                                            .addComponent(jt_NombrePlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                                        .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                                                .addGap(185, 185, 185)
                                                .addComponent(jLabel7))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_CrearPlaylistLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel21))))))
                            .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel17)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jt_AlbumPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jt_Nomplay, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(js_Aplaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jd_CrearPlaylistLayout.setVerticalGroup(
            jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearPlaylistLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel8)
                .addGap(65, 65, 65)
                .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jt_NombrePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jt_Nomplay, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(js_Pplay, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(js_Aplaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jt_Artpla, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jt_AlbumPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jb_CrearPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addGroup(jd_CrearPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel22))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Editar Cancion");

        jLabel11.setText("Nombre:");

        jLabel12.setText("Puntuacion:");

        js_EditarP.setModel(new javax.swing.SpinnerNumberModel(5, 1, 10, 1));

        jLabel13.setText("I want my.... I want my MTV!");

        jLabel14.setText("Year:");

        js_EditarYear.setModel(new javax.swing.SpinnerNumberModel(2000, 1900, 2020, 1));

        jLabel15.setText("Artista:");

        jLabel16.setText("Album:");

        jb_GuardarCambios.setText("Guardar Cambios");
        jb_GuardarCambios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_GuardarCambiosMouseClicked(evt);
            }
        });

        jLabel24.setText("Going Crazy from the moment I met you");

        javax.swing.GroupLayout jd_EditarCancionLayout = new javax.swing.GroupLayout(jd_EditarCancion.getContentPane());
        jd_EditarCancion.getContentPane().setLayout(jd_EditarCancionLayout);
        jd_EditarCancionLayout.setHorizontalGroup(
            jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_EditarCancionLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel13)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_EditarCancionLayout.createSequentialGroup()
                .addContainerGap(201, Short.MAX_VALUE)
                .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_EditarCancionLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jt_Enombre, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(243, 243, 243))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_EditarCancionLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(js_EditarP, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(339, 339, 339))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_EditarCancionLayout.createSequentialGroup()
                        .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(js_EditarYear, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jt_EArtista, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jt_Ealbum, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_GuardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(243, 243, 243))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_EditarCancionLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addContainerGap())))
        );
        jd_EditarCancionLayout.setVerticalGroup(
            jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_EditarCancionLayout.createSequentialGroup()
                .addComponent(jLabel24)
                .addGap(7, 7, 7)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jt_Enombre, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(js_EditarP, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(js_EditarYear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_EditarCancionLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jt_Ealbum, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jt_EArtista, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jd_EditarCancionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_GuardarCambios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jm_ModificarCancion.setText("Modificar Cancion");
        jm_ModificarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_ModificarCancionActionPerformed(evt);
            }
        });
        popup_TableCanciones.add(jm_ModificarCancion);

        jmt_EliminarCancion.setText("Eliminar Cancion");
        jmt_EliminarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmt_EliminarCancionActionPerformed(evt);
            }
        });
        popup_TableCanciones.add(jmt_EliminarCancion);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Playlist");
        jt_Playlist.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane3.setViewportView(jt_Playlist);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 845));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("PlayLists");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Puntuacion:");

        jLabel4.setText("Year:");

        jLabel5.setText("Artista:");

        jLabel6.setText("Album:");

        js_Puntuacion.setModel(new javax.swing.SpinnerNumberModel(5, 1, 10, 1));

        js_Year.setModel(new javax.swing.SpinnerNumberModel(2000, 1900, 2020, 1));

        jt_CancionesPlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Puntuacion", "Year", "Artista", "Album"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_CancionesPlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_CancionesPlaylistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_CancionesPlaylist);

        jl_Playlist.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jb_CrearCancion.setText("Crear Cancion");
        jb_CrearCancion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_CrearCancionMouseClicked(evt);
            }
        });

        cb_Playlists.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_PlaylistsItemStateChanged(evt);
            }
        });

        jb_Limpiar.setText("Limpiar Tabla");
        jb_Limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_LimpiarMouseClicked(evt);
            }
        });

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Playlist");
        arbol_Playlist.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(arbol_Playlist);

        jb_MostrarArbol.setText("Mostrar");
        jb_MostrarArbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_MostrarArbolMouseClicked(evt);
            }
        });

        jLabel23.setText("Still believe in magic? Well Yes I Do, Oh, Yes I Do!");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jMenu1.setText("Herramientas");

        jm_GuardarPlaylist.setText("Guardar Playlist");
        jm_GuardarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_GuardarPlaylistActionPerformed(evt);
            }
        });
        jMenu1.add(jm_GuardarPlaylist);

        jm_AbrirPlaylist.setText("Abrir una Playlist");
        jm_AbrirPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_AbrirPlaylistActionPerformed(evt);
            }
        });
        jMenu1.add(jm_AbrirPlaylist);

        jm_CrearPlaylist.setText("Crear Playlist");
        jm_CrearPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_CrearPlaylistActionPerformed(evt);
            }
        });
        jMenu1.add(jm_CrearPlaylist);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jt_NombreCancion, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                    .addComponent(js_Puntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(js_Year, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jt_Artista)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jt_Album, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jb_CrearCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jl_Playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(cb_Playlists, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jb_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_MostrarArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(674, 674, 674)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(537, 537, 537)
                        .addComponent(jLabel23)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jSeparator2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(cb_Playlists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(122, 122, 122)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(jt_NombreCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(js_Puntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jl_Playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 93, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(js_Year, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jt_Artista, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jt_Album, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addComponent(jb_CrearCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_MostrarArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(85, 85, 85)
                .addComponent(jLabel23)
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jm_CrearPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_CrearPlaylistActionPerformed
        jd_CrearPlaylist.setModal(true);
        jd_CrearPlaylist.pack();
        jd_CrearPlaylist.setLocationRelativeTo(this);
        jd_CrearPlaylist.setVisible(true);
    }//GEN-LAST:event_jm_CrearPlaylistActionPerformed

    private void jb_CrearPlaylistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_CrearPlaylistMouseClicked

        if (jt_Nomplay.getText().isEmpty() || jt_Artpla.getText().isEmpty()
                || jt_AlbumPlay.getText().isEmpty()) {
            JOptionPane.showMessageDialog(jd_CrearPlaylist, "No puede dejar las casillas vacias!");
        } else {
            Playlist list = new Playlist(jt_NombrePlaylist.getText());

            DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_Playlists.getModel();

            Cancion c = new Cancion(
                    jt_Nomplay.getText(),
                    (int) js_Pplay.getValue(),
                    (int) js_Aplaylist.getValue(),
                    jt_Artpla.getText(),
                    jt_AlbumPlay.getText()
            );

            list.getListaCanciones().add(c);

            modelo.addElement(list);

            cb_Playlists.setModel(modelo);

            jt_Nomplay.setText("");
            jt_Artpla.setText("");
            jt_AlbumPlay.setText("");
            js_Pplay.setValue(5);
            js_Aplaylist.setValue(2010);

            JOptionPane.showMessageDialog(this, "La playlist ha sido creada exitosamente");
        }

    }//GEN-LAST:event_jb_CrearPlaylistMouseClicked

    private void jb_CrearCancionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_CrearCancionMouseClicked

        if (jt_NombreCancion.getText().isEmpty() || jt_Album.getText().isEmpty()
                || jt_Artista.getText().isEmpty()) {

            JOptionPane.showMessageDialog(this, "Las casillas deben ser "
                    + "llenadas para poder agregar la cancion");

        } else if (cb_Playlists.getSelectedIndex() >= 0) {

            DefaultTableModel modelo = (DefaultTableModel) jt_CancionesPlaylist.getModel();
            Cancion c = new Cancion(jt_NombreCancion.getText(),
                    (int) js_Puntuacion.getValue(),
                    (int) js_Year.getValue(),
                    jt_Artista.getText(),
                    jt_Album.getText()
            );

            Object newRow[] = {
                c.getNombre(),
                c.getPuntuacion(),
                c.getAnio(),
                c.getArtista(),
                c.getAlbum()
            };

            modelo.addRow(newRow);

            jt_CancionesPlaylist.setModel(modelo);

            jt_NombreCancion.setText("");
            js_Puntuacion.setValue(5);
            js_Year.setValue(2000);
            jt_Artista.setText("");
            jt_Album.setText("");

            ((Playlist) cb_Playlists.getSelectedItem()).getListaCanciones().add(c);

            JOptionPane.showMessageDialog(this, "La cancion ha sido creada exitosamente");

        } else {
            JOptionPane.showMessageDialog(this, "No hay una lista seleccionada en el combobox");
        }
    }//GEN-LAST:event_jb_CrearCancionMouseClicked

    private void cb_PlaylistsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_PlaylistsItemStateChanged
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_Playlists.getModel();
        DefaultTableModel modelo2 = (DefaultTableModel) jt_CancionesPlaylist.getModel();

        if (evt.getStateChange() == 1) {

            Playlist p = (Playlist) modelo.getSelectedItem();

            for (Cancion c : p.getListaCanciones()) {

                Object[] newRow = {
                    c.getNombre(),
                    c.getPuntuacion(),
                    c.getAnio(),
                    c.getArtista(),
                    c.getAlbum()
                };

                modelo2.addRow(newRow);
            }

            jl_Playlist.setText(((Playlist) cb_Playlists.getSelectedItem()).getNombre());

            jt_CancionesPlaylist.setModel(modelo2);
        }
    }//GEN-LAST:event_cb_PlaylistsItemStateChanged

    private void jb_GuardarCambiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_GuardarCambiosMouseClicked
        DefaultTableModel modelt = (DefaultTableModel) jt_CancionesPlaylist.getModel();
        DefaultComboBoxModel modelc = (DefaultComboBoxModel) cb_Playlists.getModel();

        if (jt_Enombre.getText().equals("") || jt_EArtista.getText().equals("")
                || jt_Ealbum.getText().equals("")) {
            JOptionPane.showMessageDialog(jd_EditarCancion, "No puede dejar las casillas vacias!");
        } else if (jt_CancionesPlaylist.getSelectedRow() >= 0) {

            int indice = jt_CancionesPlaylist.getSelectedRow();
            modelt.setValueAt(jt_Enombre.getText(), indice, 0);
            modelt.setValueAt(js_EditarP.getValue(), indice, 1);
            modelt.setValueAt(js_EditarYear.getValue(), indice, 2);
            modelt.setValueAt(jt_EArtista.getText(), indice, 3);
            modelt.setValueAt(jt_Ealbum.getText(), indice, 4);

            jt_CancionesPlaylist.setModel(modelt);

            ((Playlist) cb_Playlists.getSelectedItem()).getListaCanciones().get(indice).setNombre(jt_Enombre.getText());
            ((Playlist) cb_Playlists.getSelectedItem()).getListaCanciones().get(indice).setPuntuacion((int) js_EditarP.getValue());
            ((Playlist) cb_Playlists.getSelectedItem()).getListaCanciones().get(indice).setAnio((int) js_EditarYear.getValue());
            ((Playlist) cb_Playlists.getSelectedItem()).getListaCanciones().get(indice).setArtista(jt_EArtista.getText());
            ((Playlist) cb_Playlists.getSelectedItem()).getListaCanciones().get(indice).setAlbum(jt_Ealbum.getText());

            try {
                ((Playlist) cb_Playlists.getSelectedItem()).escribirArchivo();
            } catch (Exception e) {
            }

            JOptionPane.showMessageDialog(this, "Se edito la cancion de la tabla correctamente");
            jd_EditarCancion.setVisible(false);
        }


    }//GEN-LAST:event_jb_GuardarCambiosMouseClicked

    private void jm_ModificarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_ModificarCancionActionPerformed
        jd_EditarCancion.setModal(true);
        jd_EditarCancion.pack();
        jd_EditarCancion.setLocationRelativeTo(this);
        jd_EditarCancion.setVisible(true);

        DefaultTableModel modelo = (DefaultTableModel) jt_CancionesPlaylist.getModel();

        int index = jt_CancionesPlaylist.getSelectedRow();

        jt_Enombre.setText((String) modelo.getValueAt(index, 0));
        js_EditarP.setValue(modelo.getValueAt(index, 1));
        js_EditarYear.setValue(modelo.getValueAt(index, 2));
        jt_EArtista.setText((String) modelo.getValueAt(index, 3));
        jt_Ealbum.setText((String) modelo.getValueAt(index, 4));
    }//GEN-LAST:event_jm_ModificarCancionActionPerformed

    private void jt_CancionesPlaylistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_CancionesPlaylistMouseClicked
        if (evt.isMetaDown()) {
            if (jt_CancionesPlaylist.getSelectedRow() >= 0) {
                popup_TableCanciones.show(jt_CancionesPlaylist, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jt_CancionesPlaylistMouseClicked

    private void jmt_EliminarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmt_EliminarCancionActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jt_CancionesPlaylist.getModel();

        int index = jt_CancionesPlaylist.getSelectedRow();

        Cancion c = new Cancion(
                (String) modelo.getValueAt(index, 0),
                (int) modelo.getValueAt(index, 1),
                (int) modelo.getValueAt(index, 2),
                (String) modelo.getValueAt(index, 3),
                (String) modelo.getValueAt(index, 4)
        );
        ((Playlist) cb_Playlists.getSelectedItem()).getListaCanciones().remove(index);
        modelo.removeRow(index);

        cancionesCreadas.add(c);

        jt_CancionesPlaylist.setModel(modelo);

        JOptionPane.showMessageDialog(this, "Se ha removido la cancion de la playlist");
        try {
            ((Playlist) cb_Playlists.getSelectedItem()).escribirArchivo();
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jmt_EliminarCancionActionPerformed

    private void jm_AbrirPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_AbrirPlaylistActionPerformed
        DefaultTableModel modelt = (DefaultTableModel) jt_CancionesPlaylist.getModel();
        DefaultComboBoxModel modelc = (DefaultComboBoxModel) cb_Playlists.getModel();
        Scanner sc = null;

        try {
            ((Playlist) cb_Playlists.getSelectedItem()).escribirArchivo();
        } catch (Exception e) {
        }

        JFileChooser fileChooser = new JFileChooser("./");

        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            limpiarTable();

            try {

                File archivo = fileChooser.getSelectedFile();
                Playlist p = new Playlist();

                String nombre = archivo.getName();
                int l = nombre.length();

                nombre = nombre.substring(0, l - 4);

                p.setNombre(nombre);
                modelc.setSelectedItem(p);
                sc = new Scanner(archivo);

                String file = "";

                while (sc.hasNext()) {
                    file += sc.next();

                }
                String result = file.replace("|", ";");

                sc = new Scanner(result);
                sc.useDelimiter(";");

                while (sc.hasNext()) {

                    Cancion c = new Cancion(sc.next(), sc.nextInt(), sc.nextInt(),
                            sc.next(), sc.next());

                    Object[] newRow = {
                        c.getNombre(),
                        c.getPuntuacion(),
                        c.getAnio(),
                        c.getArtista(),
                        c.getAlbum()
                    };
                    modelt.addRow(newRow);

                    p.getListaCanciones().add(c);

                }

                modelc.addElement(p);
                jt_CancionesPlaylist.setModel(modelt);
                cb_Playlists.setModel(modelc);

            } catch (Exception e) {
            }
        }


    }//GEN-LAST:event_jm_AbrirPlaylistActionPerformed

    private void jm_GuardarPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_GuardarPlaylistActionPerformed

        if (cb_Playlists.getSelectedIndex() >= 0) {

            try {
                ((Playlist) (cb_Playlists.getSelectedItem())).escribirArchivo();
            } catch (IOException ex) {

            }

            JOptionPane.showMessageDialog(this, "El archivo se ha guardo correctamente");
        }

    }//GEN-LAST:event_jm_GuardarPlaylistActionPerformed

    private void jb_LimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_LimpiarMouseClicked

        limpiarTable();
    }//GEN-LAST:event_jb_LimpiarMouseClicked

    private void jb_MostrarArbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_MostrarArbolMouseClicked
        DefaultTreeModel modelt = (DefaultTreeModel) arbol_Playlist.getModel();
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_Playlists.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelt.getRoot();
        boolean noArt = false;

        raiz.removeAllChildren();

        if (cb_Playlists.getSelectedIndex() >= 0) {
            Playlist p = (Playlist) cb_Playlists.getSelectedItem();

            for (int i = 0; i < p.getListaCanciones().size(); i++) {
                Cancion c = p.getListaCanciones().get(i);

                for (int j = 0; j < raiz.getChildCount(); j++) {
                    DefaultMutableTreeNode nodoArt = (DefaultMutableTreeNode) raiz.getChildAt(j);

                    if (nodoArt.toString().equals(c.getArtista())) {
                        DefaultMutableTreeNode nombre = new DefaultMutableTreeNode(c.getNombre());
                        DefaultMutableTreeNode punt = new DefaultMutableTreeNode("Puntuacion: "+c.getPuntuacion());
                        DefaultMutableTreeNode year = new DefaultMutableTreeNode("Year: "+c.getAnio());
                        DefaultMutableTreeNode album = new DefaultMutableTreeNode("Album: "+c.getAlbum());

                        
                        nombre.add(album);
                        nombre.add(year);
                        nombre.add(punt);
                        nodoArt.add(nombre);

                        raiz.add(nodoArt);

                        noArt = true;
                    } else {
                        noArt = false;
                    }

                }

                if (noArt == false) {
                    DefaultMutableTreeNode nombre = new DefaultMutableTreeNode(c.getNombre());
                    DefaultMutableTreeNode punt = new DefaultMutableTreeNode("Puntuacion: "+c.getPuntuacion());
                    DefaultMutableTreeNode year = new DefaultMutableTreeNode("Year: "+c.getAnio());
                    DefaultMutableTreeNode artista = new DefaultMutableTreeNode(c.getArtista());
                    DefaultMutableTreeNode album = new DefaultMutableTreeNode("Album: "+c.getAlbum());
                    nombre.add(punt);
                    nombre.add(year);
                    nombre.add(album);
                    artista.add(nombre);
                    raiz.add(artista);
                }
            }

            modelt.reload();

        } else {
            JOptionPane.showMessageDialog(this, "No hay una Playlist seleccionada");

            JOptionPane.showMessageDialog(this, "El arbol ha sido llenado");

        }


    }//GEN-LAST:event_jb_MostrarArbolMouseClicked

    public void arranqueTabla() {
        File archivo = new File("./Clau.txt");
        DefaultComboBoxModel modelc = (DefaultComboBoxModel) cb_Playlists.getModel();
        DefaultTableModel modelt = (DefaultTableModel) jt_CancionesPlaylist.getModel();
        Scanner sc = null;
        try {
            Playlist p = new Playlist();

            String nombre = archivo.getName();
            int l = nombre.length();

            nombre = nombre.substring(0, l - 4);

            p.setNombre(nombre);
            modelc.setSelectedItem(p);
            sc = new Scanner(archivo);

            String file = "";

            while (sc.hasNext()) {
                file += sc.next();

            }
            String result = file.replace("|", ";");

            sc = new Scanner(result);
            sc.useDelimiter(";");

            while (sc.hasNext()) {

                Cancion c = new Cancion(sc.next(), sc.nextInt(), sc.nextInt(),
                        sc.next(), sc.next());

                Object[] newRow = {
                    c.getNombre(),
                    c.getPuntuacion(),
                    c.getAnio(),
                    c.getArtista(),
                    c.getAlbum()
                };
                modelt.addRow(newRow);

                p.getListaCanciones().add(c);

            }

            modelc.addElement(p);
            jt_CancionesPlaylist.setModel(modelt);
            cb_Playlists.setModel(modelc);

        } catch (Exception e) {
        }
    }

    private void limpiarTable() {
        jt_CancionesPlaylist.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Puntuacion", "Year", "Artista", "Album"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class,
                java.lang.Integer.class,
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.String.class

            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree arbol_Playlist;
    private javax.swing.JComboBox<String> cb_Playlists;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jb_CrearCancion;
    private javax.swing.JButton jb_CrearPlaylist;
    private javax.swing.JButton jb_GuardarCambios;
    private javax.swing.JButton jb_Limpiar;
    private javax.swing.JButton jb_MostrarArbol;
    private javax.swing.JDialog jd_CrearPlaylist;
    private javax.swing.JDialog jd_EditarCancion;
    private javax.swing.JLabel jl_Playlist;
    private javax.swing.JMenuItem jm_AbrirPlaylist;
    private javax.swing.JMenuItem jm_CrearPlaylist;
    private javax.swing.JMenuItem jm_GuardarPlaylist;
    private javax.swing.JMenuItem jm_ModificarCancion;
    private javax.swing.JMenuItem jmt_EliminarCancion;
    private javax.swing.JSpinner js_Aplaylist;
    private javax.swing.JSpinner js_EditarP;
    private javax.swing.JSpinner js_EditarYear;
    private javax.swing.JSpinner js_Pplay;
    private javax.swing.JSpinner js_Puntuacion;
    private javax.swing.JSpinner js_Year;
    private javax.swing.JTextField jt_Album;
    private javax.swing.JTextField jt_AlbumPlay;
    private javax.swing.JTextField jt_Artista;
    private javax.swing.JTextField jt_Artpla;
    private javax.swing.JTable jt_CancionesPlaylist;
    private javax.swing.JTextField jt_EArtista;
    private javax.swing.JTextField jt_Ealbum;
    private javax.swing.JTextField jt_Enombre;
    private javax.swing.JTextField jt_NombreCancion;
    private javax.swing.JTextField jt_NombrePlaylist;
    private javax.swing.JTextField jt_Nomplay;
    private javax.swing.JTree jt_Playlist;
    private javax.swing.JPopupMenu popup_TableCanciones;
    // End of variables declaration//GEN-END:variables

    ArrayList<Cancion> cancionesCreadas = new ArrayList();

}
